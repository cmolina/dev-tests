/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Health route to know if the api is running. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/commodities/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Route to get all the created Commodities. */
        get: {
            parameters: {
                query?: {
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            commodities?: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                varieties: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                }[];
                            }[];
                            count?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /** @description Route to add new Commodities. This commodities must have a unique name and every variety must be unique for the respective commodity. */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                        varieties: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            commodity?: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                varieties: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/commodities/{commodityId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Route to get a created Commodity by its UUID. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    commodityId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            commodity?: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                varieties: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/growers/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Route to get all the created Growers. */
        get: {
            parameters: {
                query?: {
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            growers?: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                lastName: string;
                                email: string;
                                farms: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    address: string;
                                }[];
                            }[];
                            count?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /** @description Route to add new Growers. This growers must have a unique email and every farm must have a unique name address combination. */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                        lastName: string;
                        /** Format: email */
                        email: string;
                        farms: {
                            name: string;
                            address: string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            grower?: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                lastName: string;
                                email: string;
                                farms: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    address: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/growers/{growerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Route to get a created Grower by its UUID. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    growerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            grower?: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                lastName: string;
                                email: string;
                                farms: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    address: string;
                                }[];
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/clients/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Route to get all the created Clients. */
        get: {
            parameters: {
                query?: {
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            clients?: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                lastName: string;
                                email: string;
                            }[];
                            count?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /** @description Route to add new Clients. This clients must have a unique email. */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                        lastName: string;
                        /** Format: email */
                        email: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            client?: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                lastName: string;
                                email: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/clients/{clientId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Route to get a created Client by its UUID. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    clientId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            client?: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                lastName: string;
                                email: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/harvests/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            harvests?: {
                                /** Format: uuid */
                                id: string;
                                grower: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    lastName: string;
                                    email: string;
                                };
                                farm: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    address: string;
                                };
                                client: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    lastName: string;
                                    email: string;
                                };
                                commodity: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                                variety: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                                createdAt: string;
                            }[];
                            count?: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /** @description Route to add new Harvests. */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uuid */
                        growerId: string;
                        /** Format: uuid */
                        farmId: string;
                        /** Format: uuid */
                        clientId: string;
                        /** Format: uuid */
                        commodityId: string;
                        /** Format: uuid */
                        varietyId: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            harvest?: {
                                /** Format: uuid */
                                id: string;
                                grower: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    lastName: string;
                                    email: string;
                                };
                                farm: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    address: string;
                                };
                                client: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    lastName: string;
                                    email: string;
                                };
                                commodity: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                                variety: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                                createdAt: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/harvests/{harvestId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    harvestId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            harvest?: {
                                /** Format: uuid */
                                id: string;
                                grower: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    lastName: string;
                                    email: string;
                                };
                                farm: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    address: string;
                                };
                                client: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    lastName: string;
                                    email: string;
                                };
                                commodity: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                                variety: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                                createdAt: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
